/*
 * Copyright 2020 Aiven Oy
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    // https://docs.gradle.org/current/userguide/java_library_plugin.html
    id "java-library"

    // https://docs.gradle.org/current/userguide/checkstyle_plugin.html
    id "checkstyle"

    // https://docs.gradle.org/current/userguide/jacoco_plugin.html
    id "jacoco"

    // https://docs.gradle.org/current/userguide/distribution_plugin.html
    id "distribution"

    // https://docs.gradle.org/current/userguide/publishing_maven.html
    id "maven-publish"

    id "com.jfrog.bintray" version "1.8.1"
}

group = "io.aiven"
version = System.getenv("RELEASE_VERSION") ?: "0-SNAPSHOT"

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    withJavadocJar()
    withSourcesJar()
}

compileJava {
    options.compilerArgs = ["-Xlint:all", "-Werror"]
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

checkstyle {
    toolVersion "8.29"
    getConfigDirectory().set(rootProject.file("checkstyle/"))
}

test {
    useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.5"
}

repositories {
    mavenLocal()
    jcenter()
    maven {
        url "https://aiven.bintray.com/maven"
    }
}

ext {
    kafkaVersion = "1.1.0"
    amazonS3Version = "1.11.718"
    slf4jVersion = "1.7.25"
    aivenConnectCommonsVersion = "0.0.18"
    junitVersion = "5.6.2"
}

distributions {
    main {
        contents {
            from jar
            from configurations.runtimeClasspath

            into("/") {
                from projectDir
                include "version.txt", "README*", "LICENSE*", "NOTICE*", "licenses/"
                include "config/"
            }
        }
    }
}

dependencies {
    compileOnly "org.apache.kafka:connect-api:$kafkaVersion"
    compileOnly "org.apache.kafka:connect-runtime:$kafkaVersion"

    implementation "org.slf4j:slf4j-api:$slf4jVersion"
    implementation "com.amazonaws:aws-java-sdk-s3:$amazonS3Version"
    implementation "io.aiven:aiven-kafka-connect-commons:$aivenConnectCommonsVersion"

    runtimeOnly "org.slf4j:slf4j-log4j12:$slf4jVersion"

    compileOnly "org.apache.kafka:connect-api:$kafkaVersion"
    compileOnly "org.apache.kafka:connect-runtime:$kafkaVersion"
    compileOnly "org.slf4j:slf4j-api:$slf4jVersion"

    testImplementation "org.apache.kafka:connect-api:$kafkaVersion"
    testImplementation "org.apache.kafka:connect-runtime:$kafkaVersion"
    testImplementation "org.slf4j:slf4j-simple:$slf4jVersion"
    testImplementation "io.aiven:aiven-kafka-connect-commons:$aivenConnectCommonsVersion"
    testImplementation "org.junit.jupiter:junit-jupiter:$junitVersion"
    testImplementation 'io.findify:s3mock_2.11:0.2.3'

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

processResources {
    filesMatching('aiven-kafka-connect-s3-version.properties') {
        expand(version: version)
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['maven']
    publish = true
    override = false
    pkg {
        repo = 'maven'
        name = 'aiven-kafka-connect-s3'
        userOrg = 'aiven'
        licenses = ['Apache-2.0']
        websiteUrl = 'https://github.com/aiven/aiven-kafka-connect-s3'
        vcsUrl = 'https://github.com/aiven/aiven-kafka-connect-s3.git'
        labels = ['kafka', 'connect', 's3']
        publicDownloadNumbers = true
        version {
            name = project.getVersion()
            desc = 'Aiven Kafka S3 connector ' + project.getVersion()
            released  = new Date()
        }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = getGroup()
            artifactId = "aiven-kafka-connect-s3"
            version = getVersion()
            pom {
                name = "Aiven Kafka S3 connector"
                description = "A Kafka S3 sink connector for copying data from Kafka to S3."
                url = "https://aiven.io"
                organization {
                    name = "Aiven Oy"
                    url = "https://aiven.io"
                }
                licenses {
                    license {
                        name = "Apache 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0"
                        distribution = "repo"
                    }
                }
                scm {
                    connection = "scm:git:git://github.com/aiven/aiven-kafka-connect-s3.git"
                    developerConnection = "scm:git:git@github.com:aiven/aiven-kafka-connect-s3.git"
                    url = "https://github.com/aiven/aiven-kafka-connect-s3.git"
                    tag = "HEAD"
                }
            }
            from components.java
        }
    }
}
